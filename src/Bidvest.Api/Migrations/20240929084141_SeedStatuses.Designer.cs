// <auto-generated />
using System;
using Bidvest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bidvest.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240929084141_SeedStatuses")]
    partial class SeedStatuses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bidvest.DAL.Entities.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Todo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("ActionId")
                        .HasName("PK__Action__FFE3F4D93EF34768");

                    b.HasIndex("ItemId");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ItemId")
                        .HasName("PK__Item__727E838BCE9D9243");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.ItemStatus", b =>
                {
                    b.Property<int>("ItemStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemStatusId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("ItemStatusId")
                        .HasName("PK__ItemStat__80C775A3FF110F79");

                    b.HasIndex(new[] { "ItemId" }, "IX_ItemStatus_ItemId");

                    b.HasIndex(new[] { "StatusId" }, "IX_ItemStatus_StatusId");

                    b.ToTable("ItemStatus");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Meeting", b =>
                {
                    b.Property<int>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("MeetingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("MinuteDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduleEndDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ScheduleStartDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("SequenceNo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("MeetingId")
                        .HasName("PK__Meeting__E9F9E94CEECEB2FA");

                    b.HasIndex(new[] { "MeetingTypeId" }, "IX_Meeting_MeetingTypeId");

                    b.HasIndex(new[] { "Code" }, "UQ__Meeting__A25C5AA7CC51BAC9")
                        .IsUnique();

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.MeetingItem", b =>
                {
                    b.Property<int>("MeetingItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingItemId"));

                    b.Property<int?>("ActionBy")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.HasKey("MeetingItemId")
                        .HasName("PK__MeetingI__0D29BB38BFC6D13C");

                    b.HasIndex(new[] { "ActionBy" }, "IX_MeetingItem_ActionBy");

                    b.HasIndex(new[] { "ItemId" }, "IX_MeetingItem_ItemId");

                    b.HasIndex(new[] { "ItemStatusId" }, "IX_MeetingItem_ItemStatusId");

                    b.HasIndex(new[] { "MeetingId" }, "IX_MeetingItem_MeetingId");

                    b.ToTable("MeetingItem");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.MeetingType", b =>
                {
                    b.Property<int>("MeetingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingTypeId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("MeetingTypeId")
                        .HasName("PK__MeetingT__D161C3E3ED0E7E97");

                    b.HasIndex(new[] { "Code" }, "UQ__MeetingT__A25C5AA7F48E1B23")
                        .IsUnique();

                    b.ToTable("MeetingType");

                    b.HasData(
                        new
                        {
                            MeetingTypeId = 1,
                            Code = "M",
                            Name = "MANCO"
                        },
                        new
                        {
                            MeetingTypeId = 2,
                            Code = "F",
                            Name = "Finance"
                        },
                        new
                        {
                            MeetingTypeId = 3,
                            Code = "PTL",
                            Name = "Project Team Leaders"
                        });
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("OptionId")
                        .HasName("PK__Option__92C7A1FF80E2C0C9");

                    b.HasIndex(new[] { "QuestionId" }, "IX_Option_QuestionId");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06FAC03850C2E");

                    b.HasIndex(new[] { "UserId" }, "IX_Question_UserId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1ABCEE635E");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "SystemAdmin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<bool>("IsDefaultStatus")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StatusId")
                        .HasName("PK__Status__C8EE2063F07396AF");

                    b.HasIndex(new[] { "StatusName" }, "UQ__Status__05E7698AF7684F36")
                        .IsUnique();

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            IsDefaultStatus = true,
                            StatusName = "Open"
                        },
                        new
                        {
                            StatusId = 2,
                            IsDefaultStatus = true,
                            StatusName = "In Development"
                        },
                        new
                        {
                            StatusId = 3,
                            IsDefaultStatus = true,
                            StatusName = "Awaiting Invoicing"
                        },
                        new
                        {
                            StatusId = 4,
                            IsDefaultStatus = true,
                            StatusName = "Closed"
                        });
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4CB9D9A9F3");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A35AF01185A");

                    b.HasIndex(new[] { "RoleId" }, "IX_UserRole_RoleId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserRole_UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.UserVote", b =>
                {
                    b.Property<int>("UserVoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserVoteId"));

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserVoteId")
                        .HasName("PK__UserVote__0F0C36ECDCE8DEB5");

                    b.HasIndex(new[] { "OptionId" }, "IX_UserVote_OptionId");

                    b.HasIndex(new[] { "QuestionId" }, "IX_UserVote_QuestionId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserVote_UserId");

                    b.ToTable("UserVote");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Action", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.Item", "Item")
                        .WithMany("Actions")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Action__ItemId__5CD6CB2B");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.ItemStatus", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.Item", "Item")
                        .WithMany("ItemStatuses")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__ItemStatu__ItemI__5812160E");

                    b.HasOne("Bidvest.DAL.Entities.Status", "Status")
                        .WithMany("ItemStatuses")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__ItemStatu__Statu__571DF1D5");

                    b.Navigation("Item");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Meeting", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.MeetingType", "MeetingType")
                        .WithMany("Meetings")
                        .HasForeignKey("MeetingTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Meeting__Meeting__4E88ABD4");

                    b.Navigation("MeetingType");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.MeetingItem", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.User", "ActionByNavigation")
                        .WithMany("MeetingItems")
                        .HasForeignKey("ActionBy")
                        .HasConstraintName("FK__MeetingIt__Actio__60A75C0F");

                    b.HasOne("Bidvest.DAL.Entities.Item", "Item")
                        .WithMany("MeetingItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__MeetingIt__ItemI__5EBF139D");

                    b.HasOne("Bidvest.DAL.Entities.ItemStatus", "ItemStatus")
                        .WithMany("MeetingItems")
                        .HasForeignKey("ItemStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__MeetingIt__ItemS__5FB337D6");

                    b.HasOne("Bidvest.DAL.Entities.Meeting", "Meeting")
                        .WithMany("MeetingItems")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK__MeetingIt__Meeti__5DCAEF64");

                    b.Navigation("ActionByNavigation");

                    b.Navigation("Item");

                    b.Navigation("ItemStatus");

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Option", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Option__Question__2F10007B");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Question", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.User", "User")
                        .WithMany("Questions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Question__UserId__2C3393D0");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.UserRole", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__RoleId__29572725");

                    b.HasOne("Bidvest.DAL.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRole__UserId__286302EC");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.UserVote", b =>
                {
                    b.HasOne("Bidvest.DAL.Entities.Option", "Option")
                        .WithMany("UserVotes")
                        .HasForeignKey("OptionId")
                        .IsRequired()
                        .HasConstraintName("FK__UserVote__Option__33D4B598");

                    b.HasOne("Bidvest.DAL.Entities.Question", "Question")
                        .WithMany("UserVotes")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__UserVote__Questi__32E0915F");

                    b.HasOne("Bidvest.DAL.Entities.User", "User")
                        .WithMany("UserVotes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserVote__UserId__31EC6D26");

                    b.Navigation("Option");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Item", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("ItemStatuses");

                    b.Navigation("MeetingItems");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.ItemStatus", b =>
                {
                    b.Navigation("MeetingItems");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Meeting", b =>
                {
                    b.Navigation("MeetingItems");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.MeetingType", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Option", b =>
                {
                    b.Navigation("UserVotes");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Question", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("UserVotes");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.Status", b =>
                {
                    b.Navigation("ItemStatuses");
                });

            modelBuilder.Entity("Bidvest.DAL.Entities.User", b =>
                {
                    b.Navigation("MeetingItems");

                    b.Navigation("Questions");

                    b.Navigation("UserRoles");

                    b.Navigation("UserVotes");
                });
#pragma warning restore 612, 618
        }
    }
}
